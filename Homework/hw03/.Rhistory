typeof(points1)
typeof(points2)
typeof(points3)
typeof(position)
typeof(salary)
typeof(team)
mode(player)
mode(points)
mode(points1)
mode(points2)
mode(points3)
mode(position)
mode(salary)
mode(team)
is.vector(player)
is.vector(points)
is.vector(points1)
is.vector(points2)
is.vector(points3)
is.vector(position)
is.vector(salary)
is.vector(team)
is.vector(player)
is.vector(points)
is.vector(points1)
is.vector(points2)
is.vector(points3)
is.vector(position)
is.vector(salary)
is.vector(team)
four <- head(player, n = 4)
four
four[1]
four[0]
four[-1]
four[-c(1,2,3)]
four[5]
four[c(1,2,2,3,3,3)]
four[-2]
player.seq(2)
player.seq(1, length(player), 1)
seq(1, length(player), 1)
seq(1, length(player), 2)
seq(2, length(player), 2)
rep(player, 2)
player[seq(2, length(player), 2)]
player[seq(2, length(player), 2)]
salary[seq(1, length(salary), 2)]
team[seq(5, length(team), 5)]
team
scored[seq(10, length(scored), 10)]
points[seq(10, length(points), 10)]
points[seq(10, length(points), 10)]
rev(team[seq(2, length(team), 2)])
player(team == "GSW" & position == "C")
player[team == "GSW" & position == "C"]
player[team == "GSW" & team == "LAL"]
player[team == "LAL" & (position == "SG" || position == "PG")]
player[team == "LAL" & position == "SG" ]
player[team == "LAL" & position == "SG"]
player[team == "LAL" & position == "PG"]
player[team == "LAL" & position == "SG" || position == "PG"]
player[team == "LAL" & position == "PG"]
player[team == "LAL" & position == "SG" | position == "PG"]
player[team == "LAL" & position == "PG"]
player[team == "LAL" & (position == "SG" | position == "PG")]
player[team == "LAL" & position == "PG"]
player[team == "LAL" & (position == "SG" | position == "PG")]
player[team == "LAL" | team == "GSW" & position = "SF"]
player[team == "LAL" | team == "GSW" & position == "SF"]
player[salary = max(salary)]
max(salary)
player[salary = max(salary)]
max(salary)
player[salary == max(salary)]
player[salary == max(salary)]
player[salary == min(salary)]
player[points == max(points)]
salary[points == max(points)]
max(salary[position == "C"])
salary[position == "C"]
max(salary[position == "C"])
team[player = player[points = max(points)]]
team[player == player[points == max(points)]]
team[player == player[points == max(points)]]
team[player == player[points == max(points)]]
playeer[points3 == max(points3)]
player[points3 == max(points3)]
names(player)
warriors_players <-  players[team == "GSW"]
warriors_players <-  player[team == "GSW"]
warriors_salary <- salary[team == "GSW"]
warriors_points <- points[team == "GSW"]
warriors_players <-  player[team == "GSW"]
warriors_salary <- salary[team == "GSW"]
warriors_points <- points[team == "GSW"]
names(warriors_salary) <-  warriors_players
rm x
rm
rm(x)
rm(four)
warriors_salary["Andre Iguadala"]
warriors_salary[c("Stephen Curry", "Kevin Durant")]
warriors_salary["Andre Iguodala"]
plot(warriors_points, warriors_salary)
plot(points, salary)
log_points <- log(points)
log_salary <- log(salary)
plot(log_scored, log_salary)
log_points <- log(points)
log_salary <- log(salary)
plot(log_points, log_salary)
plot(log_points, log_salary)
text(log_poits, log_salary, labels = player)
plot(log_points, log_salary)
text(log_points, log_salary, labels = player)
plot(log_points, log_salary)
text(log_scored, log_salary, labels = abbreviate(player))
plot(log_points, log_salary)
text(log_points, log_salary, labels = abbreviate(player)
plot(log_points, log_salary)
text(log_points, log_salary, labels = abbreviate(player))
plot(warriors_points, warriors_salary)
text(warriors_points, warriors_salary, labels = abbreviate(player))
text(warriors_points, warriors_salary, labels = abbreviate(player))
plot(warriors_points, warriors_salary)
text(warriors_points, warriors_salary, labels = abbreviate(player))
plot(warriors_points, warriors_salary)
text(warriors_points, warriors_salary, labels = player)
plot(warriors_points, warriors_salary)
text(warriors_points, warriors_salary, labels = player)
plot(warriors_points, warriors_salary)
text(warriors_points, warriors_salary, labels = abbreviate(player))
log_wp <- log(warriors_points)
log_ws <- log(warriors_salary)
plot(log_wp, log_ws)
text(log_wp, log_ws, labels = abbreviate(player))
salary_millions <- salary/1000000
scored_points = points1 + points2 + points3
scored_points = points1 + 2 * points2 + 3* points3
position_fac <- factor(position)
table(position_fac)
position_fac <- factor(position)
table(position_fac)
position_fac[team == "GSW"]
position_fac[salary > 15000000]
table(position_fac[salary > 15000000])
table(team[position_fac[position == "SG"]])
table(team[position == "SG"]/team[position])
table(team[position == "SG"])
table(team[position == "SG"])
team[position]
table(team[position == "SG"])/table(team[players])
table(team[position == "SG"])/table(team[player])
table(team[position == "SG"])/table(team[positions])
table(team[position == "SG"])
table(team[position])
table(team[position == "SG"])
table(team[players])
table(team[position == "SG"])
table(team[player])
table(team[position == "SG"])
table(team[team == team])
table(team[position == "SG"])/table(team[team == team])
plot(warriors_points, warriors_salary)
text(warriors_points, warriors_salary, labels = abbreviate(player), col = position_fac)
plot(warriors_points, warriors_salary, col = position_fac )
text(warriors_points, warriors_salary, labels = abbreviate(player))
plot(warriors_points, warriors_salary, col = position_fac )
text(warriors_points, warriors_salary)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone <- read.table(url, sep = ",")
origin <- 'http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data'
destination <- 'abalone.data'
download.file(origin, destination)
abalone <- read.table("abalone.data", sep = ",")
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone <- read.table(url, sep = ",")
abalone <- read.table("abalone.data", sep = ",")
file('abalone.data')
abalone <- read.tablfile(e('abalone.data', sep = ",")
abalone <- read.tablfile('abalone.data', sep = ",")
abalone <- read.table(file('abalone.data', sep = ","))
abalone <- read.table(file('abalone.data'))
abalone <- read.table(file('abalone.data', sep = ","))
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/autos/imports-85.data"
download.file(url = url, destfile = 'imports-85.data')
download.file(url = url, destfile = 'imports-85.data')
setwd
setwd Desktop/Statistics/Stat\ 133/
setwd(Desktop/Statistics/Stat\ 133/)
setwd(Users/Desktop/Statistics/Stat\ 133/)
setwd(User/Desktop/Statistics/Stat\ 133/)
setwd(/Users/kanakgarg/Desktop/Statistics/Stat 133/hw-stat133)
setwd(Users/kanakgarg/Desktop/Statistics/Stat 133/hw-stat133)
setwd(Users/kanakgarg/Desktop/Statistics/Stat\ 133/hw-stat133)
setwd(Users/kanakgarg/Desktop/Statistics/)
setwd(Users/kanakgarg/Desktop/Statistics/
/Users/kanakgarg/Desktop/Statistics/Stat 133/hw-stat133
getwd
getwd()
setwd(Desktop)
setwd("Users/kanakgarg/Desktop/Statistics/Stat\ 133/hw-stat133")
read.csv("imports-85.data")
read.csv("imports-85.data", ",")
read.csv("imports-85.data", sep = ",")
read.csv("imports-85.data", sep = ",")
download.file(url = url, destfile = 'imports-85.data')
read.csv("imports-85.data", sep = ",")
read.csv("imports-85.data", sep = ",")
val <- read.csv("imports-85.data", sep = ",")
str(val)
rm val
rm(val)
rm(url)
data <- read.csv("imports-85.data", sep = ",")
str(data)
col_names <- c("symboling", "normalized_losses", "make", "fuel_type", "aspiration", "num_of_doors", "body_style", "drive_wheels", "engine_location", "wheel_base", "length", "width", "height", "curb_weight", "engine_type", "num_of_cylinders", "engine_size", "fuel_system", "bore", "stroke", "compression_ratio", "horsepower", "peak_rpm", "city_mpg", "highway_mpg", "price")
column_types <- c(
'integer','factor','factor','factor','factor','factor','factor','factor','factor','real','real','real','real','integer','factor','factor','integer','factor','factor','factor','real','factor','factor','integer', 'integer', 'factor')
col_names <- c("symboling", "normalized_losses", "make", "fuel_type", "aspiration", "num_of_doors", "body_style", "drive_wheels", "engine_location", "wheel_base", "length", "width", "height", "curb_weight", "engine_type", "num_of_cylinders", "engine_size", "fuel_system", "bore", "stroke", "compression_ratio", "horsepower", "peak_rpm", "city_mpg", "highway_mpg", "price")
col_types <- c(
'integer','factor','factor','factor','factor','factor','factor','factor','factor','real','real','real','real','integer','factor','factor','integer','factor','factor','factor','real','factor','factor','integer', 'integer', 'factor')
data <- read.table(
'imports-85.data',
col.names = col_names,
colClasses = col_types,
sep = ",")
rm(column_types)
col_names <- c("symboling", "normalized_losses", "make", "fuel_type", "aspiration", "num_of_doors", "body_style", "drive_wheels", "engine_location", "wheel_base", "length", "width", "height", "curb_weight", "engine_type", "num_of_cylinders", "engine_size", "fuel_system", "bore", "stroke", "compression_ratio", "horsepower", "peak_rpm", "city_mpg", "highway_mpg", "price")
col_types <- c(
'integer','factor','factor','factor','factor','factor','factor','factor','factor','real','real','real','real','integer','factor','factor','integer','factor','factor','factor','real','factor','factor','integer', 'integer', 'factor')
data <- read.table(
'imports-85.data',
col.names = col_names,
colClasses = col_types,
sep = ",")
str(data)
col_names <- c("symboling", "normalized_losses", "make", "fuel_type", "aspiration", "num_of_doors", "body_style", "drive_wheels", "engine_location", "wheel_base", "length", "width", "height", "curb_weight", "engine_type", "num_of_cylinders", "engine_size", "fuel_system", "bore", "stroke", "compression_ratio", "horsepower", "peak_rpm", "city_mpg", "highway_mpg", "price")
col_types <- c(
'integer','character','character','character','character','character','character','character','character','real','real','real','real','integer','character','character','integer','character','character','character','real','character','character','integer', 'integer', 'character')
data <- read.table(
'imports-85.data',
col.names = col_names,
colClasses = col_types,
sep = ",")
str(data)
col_names <- c("symboling", "normalized_losses", "make", "fuel_type", "aspiration", "num_of_doors", "body_style", "drive_wheels", "engine_location", "wheel_base", "length", "width", "height", "curb_weight", "engine_type", "num_of_cylinders", "engine_size", "fuel_system", "bore", "stroke", "compression_ratio", "horsepower", "peak_rpm", "city_mpg", "highway_mpg", "price")
col_types <- c(
'integer','character','character','character','character','character','character','character','character','real','real','real','real','integer','character','character','integer','character','character','character','real','integer','integer','integer', 'integer', 'integer')
data <- read.table(
'imports-85.data',
col.names = col_names,
colClasses = col_types,
sep = ",")
col_names <- c("symboling", "normalized_losses", "make", "fuel_type", "aspiration", "num_of_doors", "body_style", "drive_wheels", "engine_location", "wheel_base", "length", "width", "height", "curb_weight", "engine_type", "num_of_cylinders", "engine_size", "fuel_system", "bore", "stroke", "compression_ratio", "horsepower", "peak_rpm", "city_mpg", "highway_mpg", "price")
col_types <- c(
'integer','character','character','character','character','character','character','character','character','real','real','real','real','integer','character','character','integer','character','character','character','real','character','integer','integer', 'integer', 'integer')
data <- read.table(
'imports-85.data',
col.names = col_names,
colClasses = col_types,
sep = ",")
col_names <- c("symboling", "normalized_losses", "make", "fuel_type", "aspiration", "num_of_doors", "body_style", "drive_wheels", "engine_location", "wheel_base", "length", "width", "height", "curb_weight", "engine_type", "num_of_cylinders", "engine_size", "fuel_system", "bore", "stroke", "compression_ratio", "horsepower", "peak_rpm", "city_mpg", "highway_mpg", "price")
col_types <- c(
'integer','character','character','character','character','character','character','character','character','real','real','real','real','integer','character','character','integer','character','character','character','real','integer','character','integer', 'integer', 'integer')
data <- read.table(
'imports-85.data',
col.names = col_names,
colClasses = col_types,
sep = ",")
col_names <- c("symboling", "normalized_losses", "make", "fuel_type", "aspiration", "num_of_doors", "body_style", "drive_wheels", "engine_location", "wheel_base", "length", "width", "height", "curb_weight", "engine_type", "num_of_cylinders", "engine_size", "fuel_system", "bore", "stroke", "compression_ratio", "horsepower", "peak_rpm", "city_mpg", "highway_mpg", "price")
col_types <- c(
'integer','character','character','character','character','character','character','character','character','real','real','real','real','integer','character','character','integer','character','character','character','real','character','character','integer', 'integer', 'integer')
data <- read.table(
'imports-85.data',
col.names = col_names,
colClasses = col_types,
sep = ",")
col_names <- c("symboling", "normalized_losses", "make", "fuel_type", "aspiration", "num_of_doors", "body_style", "drive_wheels", "engine_location", "wheel_base", "length", "width", "height", "curb_weight", "engine_type", "num_of_cylinders", "engine_size", "fuel_system", "bore", "stroke", "compression_ratio", "horsepower", "peak_rpm", "city_mpg", "highway_mpg", "price")
col_types <- c(
'integer','character','character','character','character','character','character','character','character','real','real','real','real','integer','character','character','integer','character','character','character','real','character','character','integer', 'integer', 'character')
data <- read.table(
'imports-85.data',
col.names = col_names,
colClasses = col_types,
sep = ",")
str(data)
col_names <- c("symboling", "normalized_losses", "make", "fuel_type", "aspiration", "num_of_doors", "body_style", "drive_wheels", "engine_location", "wheel_base", "length", "width", "height", "curb_weight", "engine_type", "num_of_cylinders", "engine_size", "fuel_system", "bore", "stroke", "compression_ratio", "horsepower", "peak_rpm", "city_mpg", "highway_mpg", "price")
col_types <- c(
'integer','character','character','character','character','character','character','character','character','real','real','real','real','integer','character','character','integer','character','character','character','real','character','integer','integer', 'integer', 'character')
data <- read.table(
'imports-85.data',
col.names = col_names,
colClasses = col_types,
sep = ",")
col_names <- c("symboling", "normalized_losses", "make", "fuel_type", "aspiration", "num_of_doors", "body_style", "drive_wheels", "engine_location", "wheel_base", "length", "width", "height", "curb_weight", "engine_type", "num_of_cylinders", "engine_size", "fuel_system", "bore", "stroke", "compression_ratio", "horsepower", "peak_rpm", "city_mpg", "highway_mpg", "price")
col_types <- c(
'integer','character','character','character','character','character','character','character','character','real','real','real','real','integer','character','character','integer','character','character','character','real','integer','integer','integer', 'integer', 'integer')
data <- read.table(
'imports-85.data',
col.names = col_names,
colClasses = col_types,
sep = ",",
na.strings = "?")
str(data)
col_names <- c("symboling", "normalized_losses", "make", "fuel_type", "aspiration", "num_of_doors", "body_style", "drive_wheels", "engine_location", "wheel_base", "length", "width", "height", "curb_weight", "engine_type", "num_of_cylinders", "engine_size", "fuel_system", "bore", "stroke", "compression_ratio", "horsepower", "peak_rpm", "city_mpg", "highway_mpg", "price")
col_types <- c(
'real','character','character','character','character','character','character','character','character','real','real','real','real','integer','character','character','integer','character','character','character','real','integer','integer','integer', 'integer', 'integer')
data <- read.table(
'imports-85.data',
col.names = col_names,
colClasses = col_types,
sep = ",",
na.strings = "?")
str(data)
col_names <- c("symboling", "normalized_losses", "make", "fuel_type", "aspiration", "num_of_doors", "body_style", "drive_wheels", "engine_location", "wheel_base", "length", "width", "height", "curb_weight", "engine_type", "num_of_cylinders", "engine_size", "fuel_system", "bore", "stroke", "compression_ratio", "horsepower", "peak_rpm", "city_mpg", "highway_mpg", "price")
col_types <- c(
'real','real','character','character','character','character','character','character','character','real','real','real','real','integer','character','character','integer','character','character','character','real','integer','integer','integer', 'integer', 'integer')
data <- read.table(
'imports-85.data',
col.names = col_names,
colClasses = col_types,
sep = ",",
na.strings = "?")
str(data)
col_names <- c("symboling", "normalized_losses", "make", "fuel_type", "aspiration", "num_of_doors", "body_style", "drive_wheels", "engine_location", "wheel_base", "length", "width", "height", "curb_weight", "engine_type", "num_of_cylinders", "engine_size", "fuel_system", "bore", "stroke", "compression_ratio", "horsepower", "peak_rpm", "city_mpg", "highway_mpg", "price")
col_types <- c(
'real','real','character','character','character','character','character','character','character','real','real','real','real','integer','character','character','integer','character','character','character','real','integer','integer','integer', 'integer', 'integer')
data <- read.table('imports-85.data', col.names = col_names, colClasses = col_types, sep = ",", na.strings = "?")
str(data)
read_csv('imports-85.data', delim = ",", col.names = col_names, colClasses = col_types, sep = ",", na = "?")
readr.read_csv('imports-85.data', delim = ",", col.names = col_names, colClasses = col_types, sep = ",", na = "?")
install.packages(readr)
install.packages("readr")
readr.read_csv('imports-85.data', delim = ",", col.names = col_names, colClasses = col_types, sep = ",", na = "?")
read_csv('imports-85.data', delim = ",", col.names = col_names, colClasses = col_types, sep = ",", na = "?")
read_csv()
readr::read_csv()
readr::read_csv('imports-85.data', delim = ",", col.names = col_names, colClasses = col_types, sep = ",", na = "?")
readr::read_csv('imports-85.data', , col.names = col_names, colClasses = col_types, sep = ",", na = "?")
readr::read_csv('imports-85.data', delim = "," , col_names = col_names, col_types = col_types, na = "?")
readr::read_csv('imports-85.data' , col_names = col_names, col_types = col_types, na = "?")
library(readr)
read_csv('imports-85.data' , col_names = col_names, col_types = col_types, na = "?")
data2 <- read_csv('imports-85.data' , col_names = col_names, col_types = col_types, na = "?")
data2 <- read_csv('imports-85.data' , col_types = col_types, na = "?")
data2 <- read_csv('imports-85.data')
data2 <- read_csv('imports-85.data')
spec(data2)
column_names <- c("symboling", "normalized_losses", "make", "fuel_type", "aspiration", "num_of_doors", "body_style", "drive_wheels", "engine_location", "wheel_base", "length", "width", "height", "curb_weight", "engine_type", "num_of_cylinders", "engine_size", "fuel_system", "bore", "stroke", "compression_ratio", "horsepower", "peak_rpm", "city_mpg", "highway_mpg", "price")
column_types <- c(
'real','real','character','character','character','character','character','character','character','real','real','real','real','integer','character','character','integer','character','character','character','real','integer','integer','integer', 'integer', 'integer')
data <- read.table('imports-85.data', col.names = col_names, colClasses = col_types, sep = ",", na.strings = "?")
str(data)
data2 <- read_csv('imports-85.data', col_names = column_names, col_types = column_types, na = "?")
data2 <- read_csv('imports-85.data', col_names = column_names, col_types = column_types)
data2 <- read_csv('imports-85.data', col_names = column_names)
data2 <- read_csv('imports-85.data', col_names = column_names)
spec(data2)
data2 <- read_csv('imports-85.data', col_names = column_names, na = "?")
column2_types <- list(
col_real(), col_real(), col_character(),col_character(),col_character(),col_character(),col_character(),col_character(),col_character(), col_real(), col_real(), col_real(), col_real(),col_integer(),col_character(),col_character(),col_integer(),col_character(),col_character(),col_character(), col_real(),col_integer(),col_integer(),col_integer(), col_integer(), col_integer())
column2_types <- list(
col_double(), col_double(), col_character(),col_character(),col_character(),col_character(),col_character(),col_character(),col_character(), col_double(), col_double(), col_double(), col_double(),col_integer(),col_character(),col_character(),col_integer(),col_character(),col_character(),col_character(), col_double(),col_integer(),col_integer(),col_integer(), col_integer(), col_integer())
data2 <- read_csv('imports-85.data', col_names = column_names, col_types =  na = "?")
column2_types <- list(
col_double(), col_double(), col_character(),col_character(),col_character(),col_character(),col_character(),col_character(),col_character(), col_double(), col_double(), col_double(), col_double(),col_integer(),col_character(),col_character(),col_integer(),col_character(),col_character(),col_character(), col_double(),col_integer(),col_integer(),col_integer(), col_integer(), col_integer())
data2 <- read_csv('imports-85.data', col_names = column_names, col_types = column2_types,  na = "?")
column2_types <- list(
col_double(), col_double(), col_character(),col_character(),col_character(),col_character(),col_character(),col_character(),col_character(), col_double(), col_double(), col_double(), col_double(),col_integer(),col_character(),col_character(),col_integer(),col_character(),col_character(),col_character(), col_double(),col_integer(),col_integer(),col_integer(), col_integer(), col_integer())
data2 <- read_csv('imports-85.data', col_names = column_names, col_types = column2_types,  na = "?")
str(data2)
column2_types <- list( col_double(), col_double(), col_character(), col_character(), col_character(), col_character(), col_character(), col_character(), col_character(), col_double(), col_double(), col_double(), col_double(), col_integer(), col_character(), col_character(), col_integer(), col_character(), col_character(), col_character(), col_double(), col_integer(), col_integer(), col_integer(), col_integer(), col_integer())
data2 <- read_csv('imports-85.data', col_names = column_names, col_types = column2_types,  na = "?")
str(data2)
rm(col_names)
rm(col_types)
column2_types <- list( col_double(), col_double(), col_character(), col_character(), col_character(), col_character(), col_character(), col_character(), col_character(), col_double(), col_double(), col_double(), col_double(), col_integer(), col_character(), col_character(), col_integer(), col_character(), col_character(), col_character(), col_double(), col_integer(), col_integer(), col_integer(), col_integer(), col_integer())
data2 <- read_csv('imports-85.data', col_names = column_names, col_types = column2_types,  na = "?")
column2_types <- list( col_double(), col_double(), col_character(), col_character(), col_character(), col_character(), col_character(), col_character(), col_character(), col_double(), col_double(), col_double(), col_double(), col_integer(), col_character(), col_character(), col_integer(), col_character(), col_character(), col_character(), col_double(), col_integer(), col_integer(), col_integer(), col_integer(), col_integer())
data2 <- read_csv('imports-85.data', col_names = column_names, col_types = column2_types,  na = "?")
str(data2)
column2_types <- c( col_double(), col_double(), col_character(), col_character(), col_character(), col_character(), col_character(), col_character(), col_character(), col_double(), col_double(), col_double(), col_double(), col_integer(), col_character(), col_character(), col_integer(), col_character(), col_character(), col_character(), col_double(), col_integer(), col_integer(), col_integer(), col_integer(), col_integer())
data2 <- read_csv('imports-85.data', col_names = column_names, col_types = column2_types,  na = "?")
str(data2)
read.csv("import-85.data")
read.csv("import-85.data", sep = ",")
read.csv("imports-85.data", sep = ",")
one <- read.csv("imports-85.data", sep = ",")
str(one)
rm(one)
one <- read.csv("imports-85.data", sep = ",", header = FALSE)
str(one)
object.size(column_types)
object.size(data)
dat3 <- read.table(     'imports-85.data',     col.names = col_names,    sep = ",")
dat3 <- read.table(     'imports-85.data',     col.names = column_names,    sep = ",")
object.size(dat3)
object.size(dat3)
dat3 <- read.table(     'imports-85.data',     col.names = column_names, colClasses = column_types   sep = ",")
dat3 <- read.table(     'imports-85.data',     col.names = column_names, colClasses = column_types,   sep = ",")
dat3 <- read.table(     'imports-85.data',     col.names = column_names, colClasses = column_types,   sep = ",", na.strings = "?")
object.size(dat3)
dat3 <- read.table(     'imports-85.data',     col.names = column_names,  sep = ",", na.strings = "?")
object.size(dat3)
46896 - 37664
rm(one, dat3)
View(column2_types)
column2_types <- c( col_double(), col_double(), col_character(), col_character(), col_character(), col_character(), col_character(), col_character(), col_character(), col_double(), col_double(), col_double(), col_double(), col_integer(), col_character(), col_character(), col_integer(), col_character(), col_character(), col_character(), col_double(), col_integer(), col_integer(), col_integer(), col_integer(), col_integer())
data2 <- read_csv('imports-85.data', col_names = column_names, col_types = column2_types,  na = "?")
str(data2)
dat <- matrix(data)
dat
dat <- read.table(     'imports-85.data',     col.names = column_names, colClasses = column_types,   sep = ",", na.strings = "?")
dat <- matrix(dat)
dat
str(dat)
rm(dat)
library(readr)
library(corrplot)
column_names <- c("symboling", "normalized_losses", "make", "fuel_type", "aspiration", "num_of_doors", "body_style", "drive_wheels", "engine_location", "wheel_base", "length", "width", "height", "curb_weight", "engine_type", "num_of_cylinders", "engine_size", "fuel_system", "bore", "stroke", "compression_ratio", "horsepower", "peak_rpm", "city_mpg", "highway_mpg", "price")
column_types <- c(
'real', 'real', 'character', 'character', 'character', 'character', 'character', 'character', 'character', 'real', 'real', 'real', 'real', 'integer', 'character', 'character', 'integer', 'character', 'character', 'character', 'real', 'integer', 'integer', 'integer', 'integer', 'integer')
data <- read.table('imports-85.data', col.names = column_names, colClasses = column_types, sep = ",", na.strings = "?")
str(data)
column2_types <- c( col_double(), col_double(), col_character(), col_character(), col_character(), col_character(), col_character(), col_character(), col_character(), col_double(), col_double(), col_double(), col_double(), col_integer(), col_character(), col_character(), col_integer(), col_character(), col_character(), col_character(), col_double(), col_integer(), col_integer(), col_integer(), col_integer(), col_integer())
data2 <- read_csv('imports-85.data', col_names = column_names, col_types = column2_types,  na = "?")
str(data2)
hist(data$price, freq = TRUE, col ="grey", border = "black", main = "Histogram Of Price", xlab = "Price", ylab = "Counts", labels = TRUE, ylim = c(0, 125), xlim = c(0, 50000))
boxplot(data$horsepower, horizontal = TRUE, col = "grey", main = "Boxplot of Horsepower", xlab = "Horsepower", ylim = c(0, 300))
body_style <- sort(table(data$body_style), decreasing = TRUE)
barplot(body_style, col = "grey",  main = "Barplot of Body Style", xlab = "Body Style", ylab = "Frequency", ylim = c(0, 100))
turboV = data[data$aspiration == "turbo",]
stars(turboV[ , c(10,11,12,13,26)], main = "Starplot of Turbo Cars")
qdat <- na.omit(data[,c(10,11,12,13,14,17,21,22,23,24,25,26)])
M <- cor(qdat)
corrplot(M, type = "upper", method = "color")
corrplot(M, type = "lower", method = "pie")
pc <- prcomp(qdat, scale. = TRUE)
eigenvalues <- pc$sdev^2
data.frame("Eigenvalue" = eigenvalues, "percentage" = eigenvalues/sum(eigenvalues)*100, "cumulative.percentage" = cumsum(eigenvalues/sum(eigenvalues)*100))
x <- as.data.frame(pc$x)
plot(x$PC1, x$PC2, main = "Scatter Plot of Components", xlab = "PC1", ylab = "PC2", xlim = c(-10,10), ylim = c(-5,5))
rotations <- as.data.frame(pc$rotation)
plot(rotations$PC1, rotations$PC2, main = "Scatter Plot of Loadings", xlab = "Loading 1", ylab = "Loading 2", xlim = c(-0.4, 0.4), ylim = c(-0.6, 0.6) )
prcomp(qdat, scale. = TRUE)
biplot(prcomp(qdat, scale. = TRUE))
biplot(prcomp(qdat, scale. = FALSE))
biplot(prcomp(qdat, scale. = TRUE))
biplot(prcomp(qdat, scale. = TRUE), xlabs=rep("", nrow(data)), ylabs = rep("", ncol(data)))
biplot(prcomp(qdat, scale. = TRUE), xlabs=""))
biplot(prcomp(qdat, scale. = TRUE), xlabs="")
biplot(prcomp(qdat, scale. = TRUE), xlabs=".")
biplot(prcomp(qdat, scale. = TRUE))
x <- as.data.frame(pc$x)
plot(x$PC3, x$PC4, main = "Scatter Plot of Components", xlab = "PC1", ylab = "PC2", xlim = c(-10,10), ylim = c(-5,5))
x <- as.data.frame(pc$x)
plot(x$PC1, x$PC2, main = "Scatter Plot of Components", xlab = "PC1", ylab = "PC2", xlim = c(-10,10), ylim = c(-5,5))
rotations <- as.data.frame(pc$rotation)
plot(rotations$PC3, rotations$PC4, main = "Scatter Plot of Loadings", xlab = "Loading 1", ylab = "Loading 2", xlim = c(-0.4, 0.4), ylim = c(-0.6, 0.6) )
rotations <- as.data.frame(pc$rotation)
plot(rotations$PC5, rotations$PC6, main = "Scatter Plot of Loadings", xlab = "Loading 1", ylab = "Loading 2", xlim = c(-0.4, 0.4), ylim = c(-0.6, 0.6) )
rotations <- as.data.frame(pc$rotation)
plot(rotations$PC1, rotations$PC2, main = "Scatter Plot of Loadings", xlab = "Loading 1", ylab = "Loading 2", xlim = c(-0.4, 0.4), ylim = c(-0.6, 0.6) )
getwd()
setwd('Desktop/Statistics')
getwd()
ls
setwd('hw03')
setwd('/hw03')
setwd('hw-stat133/hw03')
setwd('hw-stat133/')
setwd('hw-stat133')
setwd('/hw-stat133')
setwd('Desktop/Statistics/hw-stat133')
setwd("Users/kanakgarg")
setwd("Stat\ 133/")
setwd('hw-stat133')
setwd('hw03')
knitr::opts_chunk$set(echo = TRUE, error = TRUE, fig.path = 'images/')
getwd()
knitr::opts_chunk$set(echo = TRUE, error = TRUE, fig.path = 'images/')
source("code/binomial-functions.R")
first <- bin_probability(10, 3, 1/6)
first
second <- bin_distribution(10, 1/4)
second
plot(second)
third = 0
for (x in 3:5) {
third = third + bin_probability(5, x, 0.35)
}
third
fourth <- bin_distribution(15, 0.35)
fourth
plot(fourth)
source("code/binomial-functions.R")
first <- bin_probability(10, 3, 1/6)
first
second <- bin_distribution(10, 1/4)
second
plot(second)
third = 0
for (x in 3:5) {
third = third + bin_probability(5, x, 0.35)
}
third
fourth <- bin_distribution(15, 0.35)
fourth
plot(fourth)
knitr::opts_chunk$set(echo = TRUE, error = TRUE, fig.path = 'images/')
